// <auto-generated />
using System;
using CurrentAccount.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CurrentAccount.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220729072801_AddForeignkey1")]
    partial class AddForeignkey1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CurrentAccount.Data.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<double>("balance")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("CurrentAccount.Data.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("CurrentAccount.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dory",
                            SurName = "Fakhry"
                        });
                });

            modelBuilder.Entity("CurrentAccount.Data.Account", b =>
                {
                    b.HasOne("CurrentAccount.Data.User", "user")
                        .WithMany("AccountList")
                        .HasForeignKey("UserId");

                    b.Navigation("user");
                });

            modelBuilder.Entity("CurrentAccount.Data.Transaction", b =>
                {
                    b.HasOne("CurrentAccount.Data.Account", "account")
                        .WithMany("TransactionList")
                        .HasForeignKey("AccountId");

                    b.Navigation("account");
                });

            modelBuilder.Entity("CurrentAccount.Data.Account", b =>
                {
                    b.Navigation("TransactionList");
                });

            modelBuilder.Entity("CurrentAccount.Data.User", b =>
                {
                    b.Navigation("AccountList");
                });
#pragma warning restore 612, 618
        }
    }
}
